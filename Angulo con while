#include <Wire.h>
#include <Zumo32U4.h>

L3G gyro;
Zumo32U4LCD lcd;
Zumo32U4LineSensors lineSensors;
Zumo32U4ProximitySensors proxSensors;
Zumo32U4Motors motors;
Zumo32U4ButtonA buttonA;


int16_t umbral = 500;

#define NUM_SENSORS 5
unsigned int lineSensorValues[NUM_SENSORS];

long dt=100;
long MartinaStoessel=0;
int32_t grados;
float mult = (90/10285.0)*100/1000.0;

void setup()
{
  lineSensors.initFiveSensors();
  proxSensors.initThreeSensors();

  gyro.init();
  Wire.begin();
  
  if (!gyro.init())
    {
      // Failed to detect the gyro.
      ledRed(1);
      while(1)
        {
          lcd.print(F("Failed."));
          delay(100);
        }
    }

  gyro.enableDefault(); 
  
  buttonA.waitForButton();
}

void loop()
{
  lineSensors.read(lineSensorValues);

  proxSensors.read();
  int16_t izq = max (proxSensors.countsLeftWithLeftLeds(), proxSensors.countsLeftWithRightLeds());
  int16_t der = max (proxSensors.countsRightWithLeftLeds(), proxSensors.countsRightWithRightLeds());
  int16_t ade = max (proxSensors.countsFrontWithLeftLeds(), proxSensors.countsFrontWithRightLeds());


  if (lineSensorValues[0] < umbral && lineSensorValues[2] > umbral && lineSensorValues[4] < umbral)
    {
      motors.setSpeeds(100, 100);
    }

  if (lineSensorValues[0] > umbral && lineSensorValues[2] > umbral && lineSensorValues[4] < umbral)
    {
      if (millis()-MartinaStoessel>dt)
        {  
           gyro.read();
           grados = grados + gyro.g.z*mult;
           MartinaStoessel = millis();
           Serial.println("   Grados girados");
           Serial.print(grados);
        }
      
       while (grados < 86)
          {
            motors.setSpeeds(-100, 200);
          }
     }

  if (lineSensorValues[0] < umbral && lineSensorValues[2] > umbral && lineSensorValues[4] > umbral)
    {
      if (millis()-MartinaStoessel>dt)
        {  
           gyro.read();
           grados = grados + gyro.g.z*mult;
           MartinaStoessel = millis();
           Serial.println("   Grados girados");
           Serial.print(grados);
        }
      
       while (grados < 86)
          {
            motors.setSpeeds(200, -100);
          }
    }

  if (lineSensorValues[0] > umbral && lineSensorValues[2] > umbral && lineSensorValues[4] > umbral)
    {
     if (izq < der && izq < ade)
        {
              if (millis()-MartinaStoessel>dt)
                {  
                   gyro.read();
                   grados = grados + gyro.g.z*mult;
                   MartinaStoessel = millis();
                }
              
               while (grados < 86)
                  {
                    motors.setSpeeds(-100, 200);
                  }
           }
        
       if (der < izq && der < ade)
        {
          if (millis()-MartinaStoessel>dt)
            {  
               gyro.read();
               grados = grados + gyro.g.z*mult;
               MartinaStoessel = millis();
            }
          
           while (grados < 86)
              {
                motors.setSpeeds(200, -100);
              }
        }          
   
       if (ade < der && ade < izq)
        {
          motors.setSpeeds(100, 100);
        }         
}
}
